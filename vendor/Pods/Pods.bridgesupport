<?xml version='1.0'?>
<signatures version='1.0'>
<constant declared_type='NSString*' type='@' name='ECSlidingViewTopDidAnchorLeft' const='true'/>
<constant declared_type='NSString*' type='@' name='ECSlidingViewTopDidAnchorRight' const='true'/>
<constant declared_type='NSString*' type='@' name='ECSlidingViewTopDidReset' const='true'/>
<constant declared_type='NSString*' type='@' name='ECSlidingViewUnderLeftWillAppear' const='true'/>
<constant declared_type='NSString*' type='@' name='ECSlidingViewUnderRightWillAppear' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFAttribute' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFCalendarDate' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFDatatype' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFDomainKey' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFKey' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFKeys' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFMemoryDatabase' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFNanoObjectBehaviorException' const='true'/>
<constant declared_type='NSInteger' type='i' name='NSFNanoStoreErrorKey' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFNanoStoreUnableToManipulateStoreException' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFNonConformingNanoObjectProtocolException' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFObjectClass' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFP_ColumnIdentifier' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFP_DatatypeIdentifier' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFP_FullDatatypeIdentifier' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFP_SchemaTable' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFP_TableIdentifier' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFPlist' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFRowIDColumnName' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFTemporaryDatabase' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFUnexpectedParameterException' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFValue' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFValues' const='true'/>
<constant declared_type='NSString*' type='@' name='NSFVersionKey' const='true'/>
<constant declared_type='NSInteger' type='i' name='NSF_Private_InvalidParameterDataCodeKey' const='true'/>
<constant declared_type='NSInteger' type='i' name='NSF_Private_MacOSXErrorCodeKey' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_NSFKeys_NSFKey' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_NSFKeys_NSFPlist' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_NSFKey' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_NSFObjectKeys' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_NSFNanoBag_Name' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFAttribute' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFKey' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_NSFValues_NSFValue' const='true'/>
<constant declared_type='NSString*' type='@' name='NSF_Private_ToDeleteTableKey' const='true'/>
<enum name='CacheAllData' value='1'/>
<enum name='CacheDataOnDemand' value='2'/>
<enum name='DoNotCacheData' value='3'/>
<enum name='ECFixedRevealWidth' value='1'/>
<enum name='ECFullWidth' value='0'/>
<enum name='ECLeft' value='0'/>
<enum name='ECNone' value='0'/>
<enum name='ECPanning' value='2'/>
<enum name='ECRight' value='1'/>
<enum name='ECTapping' value='1'/>
<enum name='ECVariableRevealWidth' value='2'/>
<enum name='JournalModeDelete' value='0'/>
<enum name='JournalModeMemory' value='3'/>
<enum name='JournalModeOFF' value='5'/>
<enum name='JournalModePersist' value='2'/>
<enum name='JournalModeTruncate' value='1'/>
<enum name='JournalModeWAL' value='4'/>
<enum name='NSFAfterDate' value='3'/>
<enum name='NSFAnd' value='1'/>
<enum name='NSFAttributeColumn' value='2'/>
<enum name='NSFAverage' value='1'/>
<enum name='NSFBeforeDate' value='1'/>
<enum name='NSFBeginsWith' value='1'/>
<enum name='NSFContains' value='2'/>
<enum name='NSFCount' value='2'/>
<enum name='NSFEncodingUTF16' value='2'/>
<enum name='NSFEncodingUTF8' value='1'/>
<enum name='NSFEncodingUnknown' value='3'/>
<enum name='NSFEndsWith' value='3'/>
<enum name='NSFEngineProcessingDefaultMode' value='1'/>
<enum name='NSFEngineProcessingFastMode' value='2'/>
<enum name='NSFEqualTo' value='0'/>
<enum name='NSFGreaterThan' value='8'/>
<enum name='NSFInsensitiveBeginsWith' value='5'/>
<enum name='NSFInsensitiveContains' value='6'/>
<enum name='NSFInsensitiveEndsWith' value='7'/>
<enum name='NSFInsensitiveEqualTo' value='4'/>
<enum name='NSFKeyColumn' value='1'/>
<enum name='NSFLessThan' value='9'/>
<enum name='NSFMax' value='3'/>
<enum name='NSFMemoryStoreType' value='1'/>
<enum name='NSFMin' value='4'/>
<enum name='NSFNanoTypeData' value='1'/>
<enum name='NSFNanoTypeDate' value='3'/>
<enum name='NSFNanoTypeNumber' value='4'/>
<enum name='NSFNanoTypeRowUID' value='0'/>
<enum name='NSFNanoTypeString' value='2'/>
<enum name='NSFNanoTypeUnknown' value='-1'/>
<enum name='NSFOnDate' value='2'/>
<enum name='NSFOr' value='2'/>
<enum name='NSFPersistentStoreType' value='3'/>
<enum name='NSFReturnKeys' value='2'/>
<enum name='NSFReturnObjects' value='1'/>
<enum name='NSFTemporaryStoreType' value='2'/>
<enum name='NSFTotal' value='5'/>
<enum name='NSFValueColumn' value='3'/>
<enum name='SVProgressHUDMaskTypeBlack' value='3'/>
<enum name='SVProgressHUDMaskTypeClear' value='2'/>
<enum name='SVProgressHUDMaskTypeGradient' value='4'/>
<enum name='SVProgressHUDMaskTypeNone' value='1'/>
<enum name='SynchronousModeFull' value='2'/>
<enum name='SynchronousModeNormal' value='1'/>
<enum name='SynchronousModeOff' value='0'/>
<enum name='TempStoreModeDefault' value='0'/>
<enum name='TempStoreModeFile' value='1'/>
<enum name='TempStoreModeMemory' value='2'/>
<function name='NSFIsDebugOn'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSFNanoDatatypeFromString'>
<arg declared_type='NSString*' type='@' name='aNanoDatatype'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</function>
<function name='NSFSetIsDebugOn'>
<arg declared_type='BOOL' type='B' name='flag'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSFStringFromMatchType'>
<arg declared_type='NSFMatchType' type='i' name='aMatchType'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFStringFromNanoDataType'>
<arg declared_type='NSFNanoDatatype' type='i' name='aNanoDatatype'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='ECSlidingViewController'>
<method selector='anchorLeftPeekAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorLeftRevealAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorRightPeekAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorRightRevealAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorTopViewOffScreenTo:'>
<arg declared_type='ECSide' type='i' name='side' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewOffScreenTo:animations:onComplete:'>
<arg declared_type='ECSide' type='i' name='side' index='0'/>
<arg declared_type='void (^)()' type='@?' name='animations' index='1' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' type='@?' name='complete' index='2' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewTo:'>
<arg declared_type='ECSide' type='i' name='side' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewTo:animations:onComplete:'>
<arg declared_type='ECSide' type='i' name='side' index='0'/>
<arg declared_type='void (^)()' type='@?' name='animations' index='1' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' type='@?' name='complete' index='2' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='panGesture'>
<retval declared_type='UIPanGestureRecognizer*' type='@'/>
</method>
<method selector='resetStrategy'>
<retval declared_type='ECResetStrategy' type='i'/>
</method>
<method selector='resetTopView'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetTopViewWithAnimations:onComplete:'>
<arg declared_type='void (^)()' type='@?' name='animations' index='0' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' type='@?' name='complete' index='1' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorLeftPeekAmount:'>
<arg declared_type='CGFloat' type='f' name='anchorLeftPeekAmount' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorLeftRevealAmount:'>
<arg declared_type='CGFloat' type='f' name='anchorLeftRevealAmount' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorRightPeekAmount:'>
<arg declared_type='CGFloat' type='f' name='anchorRightPeekAmount' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorRightRevealAmount:'>
<arg declared_type='CGFloat' type='f' name='anchorRightRevealAmount' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResetStrategy:'>
<arg declared_type='ECResetStrategy' type='i' name='resetStrategy' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldAllowUserInteractionsWhenAnchored:'>
<arg declared_type='BOOL' type='B' name='shouldAllowUserInteractionsWhenAnchored' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopViewController:'>
<arg declared_type='UIViewController*' type='@' name='topViewController' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderLeftViewController:'>
<arg declared_type='UIViewController*' type='@' name='underLeftViewController' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderLeftWidthLayout:'>
<arg declared_type='ECViewWidthLayout' type='i' name='underLeftWidthLayout' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderRightViewController:'>
<arg declared_type='UIViewController*' type='@' name='underRightViewController' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderRightWidthLayout:'>
<arg declared_type='ECViewWidthLayout' type='i' name='underRightWidthLayout' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAllowUserInteractionsWhenAnchored'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='topViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='topViewIsOffScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underLeftShowing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underLeftViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='underLeftWidthLayout'>
<retval declared_type='ECViewWidthLayout' type='i'/>
</method>
<method selector='underRightShowing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underRightViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='underRightWidthLayout'>
<retval declared_type='ECViewWidthLayout' type='i'/>
</method>
</class>
<class name='NSFNanoBag'>
<method selector='_inflateObjectsWithKeys:'>
<arg declared_type='NSArray*' type='@' name='someKeys' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_saveInStore:error:'>
<arg declared_type='NSFNanoStore*' type='@' name='someStore' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_setStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='aStore' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:error:'>
<arg declared_type='id' type='@' name='theObject' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method class_method='true' selector='bagWithName:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithName:andObjects:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<arg declared_type='NSArray*' type='@' name='theObjects' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithObjects:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='deflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initBagWithName:andObjects:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<arg declared_type='NSArray*' type='@' name='someObjects' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoBag:'>
<arg declared_type='NSFNanoBag*' type='@' name='otherNanoBag' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reloadBagWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg declared_type='id' type='@' name='theObject' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectWithKey:'>
<arg declared_type='NSString*' type='@' name='theObjectKey' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsWithKeysInArray:'>
<arg declared_type='NSArray*' type='@' name='theKeys' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='saveAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='savedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setName:'>
<arg declared_type='NSString*' type='@' name='name' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='store' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='undoChangesWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unsavedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSFNanoEngine'>
<method class_method='true' selector='NSFEncodingTypeToNSString:'>
<arg declared_type='NSFEncodingType' type='i' name='value' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_ROWIDPresenceLocation:datatypes:'>
<arg declared_type='NSArray*' type='@' name='tableColumns' index='0'/>
<arg declared_type='NSArray*' type='@' name='datatypes' index='1'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='NSFP_beginTransactionMode:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_cacheMethodToString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_createTable:withColumns:datatypes:isTemporary:'>
<arg declared_type='NSString*' type='@' name='table' index='0'/>
<arg declared_type='NSArray*' type='@' name='tableColumns' index='1'/>
<arg declared_type='NSArray*' type='@' name='tableDatatypes' index='2'/>
<arg declared_type='BOOL' type='B' name='isTemporaryFlag' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_datatypeForColumn:'>
<arg declared_type='NSString*' type='@' name='tableAndColumn' index='0'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='NSFP_datatypeForTable:column:'>
<arg declared_type='NSString*' type='@' name='table' index='0'/>
<arg declared_type='NSString*' type='@' name='column' index='1'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method class_method='true' selector='NSFP_decodeQuantum:andSource:'>
<arg declared_type='unsigned char*' type='*' name='dest' index='0'/>
<arg declared_type='char*' type='*' name='src' index='1' const='true'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_flattenAllTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_insertStringValues:forColumns:table:'>
<arg declared_type='NSArray*' type='@' name='values' index='0'/>
<arg declared_type='NSArray*' type='@' name='columns' index='1'/>
<arg declared_type='NSString*' type='@' name='table' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_installCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_isColumnROWIDAlias:forTable:'>
<arg declared_type='NSString*' type='@' name='column' index='0'/>
<arg declared_type='NSString*' type='@' name='table' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_nestedDescriptionWithPrefixedSpace:'>
<arg declared_type='NSString*' type='@' name='prefixedSpace' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prefixWithDotDelimiter:'>
<arg declared_type='NSString*' type='@' name='tableAndColumn' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prepareSQLite3Statement:theSQLStatement:'>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}' name='aStatement' index='0'/>
<arg declared_type='NSString*' type='@' name='aSQLQuery' index='1'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='NSFP_rebuildDatatypeCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_removeColumn:fromTable:'>
<arg declared_type='NSString*' type='@' name='column' index='0'/>
<arg declared_type='NSString*' type='@' name='table' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_setFullColumnNamesEnabled'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSFP_sharedROWIDKeywords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_sqlString:appendingTags:'>
<arg declared_type='NSMutableString*' type='@' name='theSQLStatement' index='0'/>
<arg declared_type='NSArray*' type='@' name='columns' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:appendingTags:quoteTags:'>
<arg declared_type='NSMutableString*' type='@' name='theSQLStatement' index='0'/>
<arg declared_type='NSArray*' type='@' name='tags' index='1'/>
<arg declared_type='BOOL' type='B' name='flag' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:forTable:withColumns:datatypes:'>
<arg declared_type='NSMutableString*' type='@' name='theSQLStatement' index='0'/>
<arg declared_type='NSString*' type='@' name='table' index='1'/>
<arg declared_type='NSArray*' type='@' name='columns' index='2'/>
<arg declared_type='NSArray*' type='@' name='datatypes' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='NSFP_stripBitsFromExtendedResultCode:'>
<arg declared_type='int' type='i' name='extendedResult' index='0'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='NSFP_suffixWithDotDelimiter:'>
<arg declared_type='NSString*' type='@' name='tableAndColumn' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_uninstallCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSStringToNSFEncodingType:'>
<arg declared_type='NSString*' type='@' name='value' index='0'/>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method class_method='true' selector='_plistToDictionary:'>
<arg declared_type='NSString*' type='@' name='aPlist' index='0'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='allTables'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyTimeout'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='cacheMethod'>
<retval declared_type='NSFCacheMethod' type='i'/>
</method>
<method selector='cacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='close'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnsForTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commitTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compact'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createIndexForColumn:table:isUnique:'>
<arg declared_type='NSString*' type='@' name='theColumn' index='0'/>
<arg declared_type='NSString*' type='@' name='theTable' index='1'/>
<arg declared_type='BOOL' type='B' name='isUnique' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createTable:withColumns:datatypes:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<arg declared_type='NSArray*' type='@' name='theColumns' index='1'/>
<arg declared_type='NSArray*' type='@' name='theDatatypes' index='2'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg declared_type='NSString*' type='@' name='thePath' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='datatypesForTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='decodeDataFromBase64:'>
<arg declared_type='NSString*' type='@' name='theEncodedData' index='0'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dropIndex:'>
<arg declared_type='NSString*' type='@' name='theIndex' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='encodeDataToBase64:'>
<arg declared_type='NSData*' type='@' name='theData' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='encoding'>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method selector='executeSQL:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='indexedColumnsForTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithPath:'>
<arg declared_type='NSString*' type='@' name='thePath' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='integrityCheck'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDatabaseOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTransactionActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='journalModeAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='NSFJournalModeMode' type='i'/>
</method>
<method selector='maxRowUIDForTable:'>
<arg declared_type='NSString*' type='@' name='theTable' index='0'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='nanoStoreEngineVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='openWithCacheMethod:useFastMode:'>
<arg declared_type='NSFCacheMethod' type='i' name='theCacheMethod' index='0'/>
<arg declared_type='BOOL' type='B' name='useFastMode' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pageSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='recommendedCacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='rollbackTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyTimeout:'>
<arg declared_type='unsigned int' type='I' name='theTimeout' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheMethod:'>
<arg declared_type='NSFCacheMethod' type='i' name='cacheMethod' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheSize:'>
<arg declared_type='NSUInteger' type='I' name='numberOfPages' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEncodingType:'>
<arg declared_type='NSFEncodingType' type='i' name='theEncodingType' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setJournalMode:'>
<arg declared_type='NSFJournalModeMode' type='i' name='theMode' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPageSize:'>
<arg declared_type='NSUInteger' type='I' name='numberOfBytes' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSynchronousMode:'>
<arg declared_type='NSFSynchronousMode' type='i' name='theSynchronousMode' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTempStoreMode:'>
<arg declared_type='NSFTempStoreMode' type='i' name='theTempStoreMode' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedNanoStoreEngineDatatypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='sqlite'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method class_method='true' selector='sqliteVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringWithUUID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='synchronousMode'>
<retval declared_type='NSFSynchronousMode' type='i'/>
</method>
<method class_method='true' selector='systemPageSize'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='tables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tempStoreMode'>
<retval declared_type='NSFTempStoreMode' type='i'/>
</method>
<method selector='temporaryTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoExpression'>
<method selector='addPredicate:withOperator:'>
<arg declared_type='NSFNanoPredicate*' type='@' name='thePredicate' index='0'/>
<arg declared_type='NSFOperator' type='i' name='theOperator' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='expressionWithPredicate:'>
<arg declared_type='NSFNanoPredicate*' type='@' name='thePredicate' index='0'/>
<retval declared_type='NSFNanoExpression*' type='@'/>
</method>
<method selector='initWithPredicate:'>
<arg declared_type='NSFNanoPredicate*' type='@' name='thePredicate' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='operators'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='predicates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoObject'>
<method selector='_setOriginalClassString:'>
<arg declared_type='NSString*' type='@' name='theClassString' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEntriesFromDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='otherDictionary' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='info'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:key:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<arg declared_type='NSString*' type='@' name='theKey' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoObject:'>
<arg declared_type='NSFNanoObject*' type='@' name='otherNanoObject' index='0'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='nanoObject'>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:key:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<arg declared_type='NSString*' type='@' name='theKey' index='1'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='originalClassString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg declared_type='NSArray*' type='@' name='keyArray' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKey:'>
<arg declared_type='id' type='@' name='anObject' index='0'/>
<arg declared_type='NSString*' type='@' name='aKey' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFNanoPredicate'>
<method selector='column'>
<retval declared_type='NSFTableColumnType' type='i'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithColumn:matching:value:'>
<arg declared_type='NSFTableColumnType' type='i' name='theType' index='0'/>
<arg declared_type='NSFMatchType' type='i' name='theMatch' index='1'/>
<arg declared_type='NSString*' type='@' name='theValue' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method class_method='true' selector='predicateWithColumn:matching:value:'>
<arg declared_type='NSFTableColumnType' type='i' name='theType' index='0'/>
<arg declared_type='NSFMatchType' type='i' name='theMatch' index='1'/>
<arg declared_type='NSString*' type='@' name='theValue' index='2'/>
<retval declared_type='NSFNanoPredicate*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSFNanoResult'>
<method selector='_calculateNumberOfRows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initWithDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='results' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithError:'>
<arg declared_type='NSError*' type='@' name='error' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_reset'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_resultWithDictionary:'>
<arg declared_type='NSDictionary*' type='@' name='results' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method class_method='true' selector='_resultWithError:'>
<arg declared_type='NSError*' type='@' name='error' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_setError:'>
<arg declared_type='NSError*' type='@' name='error' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='columns'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='firstValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setError:'>
<arg declared_type='NSError*' type='@' name='error' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueAtIndex:forColumn:'>
<arg declared_type='NSUInteger' type='I' name='theIndex' index='0'/>
<arg declared_type='NSString*' type='@' name='theColumn' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valuesForColumn:'>
<arg declared_type='NSString*' type='@' name='theColumn' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='writeToFile:'>
<arg declared_type='NSString*' type='@' name='thePath' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFNanoSearch'>
<method selector='_dataWithKey:attribute:value:matching:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<arg declared_type='NSString*' type='@' name='anAttribute' index='1'/>
<arg declared_type='NSString*' type='@' name='aValue' index='2'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='3'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:returning:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<arg declared_type='NSString*' type='@' name='anAttribute' index='1'/>
<arg declared_type='NSString*' type='@' name='aValue' index='2'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='3'/>
<arg declared_type='NSFReturnType' type='i' name='returnedObjectType' index='4'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dictionaryForKeyPath:value:'>
<arg declared_type='NSString*' type='@' name='keyPath' index='0'/>
<arg declared_type='id' type='@' name='value' index='1'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithExpressions:'>
<arg declared_type='NSArray*' type='@' name='someExpressions' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithKey:attribute:value:matching:'>
<arg declared_type='NSString*' type='@' name='aKey' index='0'/>
<arg declared_type='NSString*' type='@' name='anAttribute' index='1'/>
<arg declared_type='id' type='@' name='aValue' index='2'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='3'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_prepareSQLQueryStringWithKeys:'>
<arg declared_type='NSArray*' type='@' name='someKeys' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_preparedSQL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForAttributeColumnWithValue:matching:valueColumnWithValue:'>
<arg declared_type='id' type='@' name='anAttributeValue' index='0'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='1'/>
<arg declared_type='id' type='@' name='aValue' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForColumn:value:matching:'>
<arg declared_type='NSString*' type='@' name='aColumn' index='0'/>
<arg declared_type='id' type='@' name='aValue' index='1'/>
<arg declared_type='NSFMatchType' type='i' name='match' index='2'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_quoteStrings:joiningWithDelimiter:'>
<arg declared_type='NSArray*' type='@' name='strings' index='0'/>
<arg declared_type='NSString*' type='@' name='delimiter' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_resultsFromSQLQuery:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_retrieveDataAdded:calendarDate:error:'>
<arg declared_type='NSFDateMatchType' type='i' name='aDateMatch' index='0'/>
<arg declared_type='NSDate*' type='@' name='aDate' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_retrieveDataWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_sortResultsIfApplicable:returnType:'>
<arg declared_type='NSDictionary*' type='@' name='results' index='0'/>
<arg declared_type='NSFReturnType' type='i' name='theReturnType' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='aggregateOperation:onAttribute:'>
<arg declared_type='NSFAggregateFunctionType' type='i' name='theFunctionType' index='0'/>
<arg declared_type='NSString*' type='@' name='theAttribute' index='1'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attributesToBeReturned'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='executeSQL:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='executeSQL:returnType:error:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<arg declared_type='NSFReturnType' type='i' name='theReturnType' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='explainSQL:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='expressions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filterClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupValues'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='theNanoStore' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method selector='nanoStore'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchObjectsAdded:date:returnType:error:'>
<arg declared_type='NSFDateMatchType' type='i' name='theDateMatch' index='0'/>
<arg declared_type='NSDate*' type='@' name='theDate' index='1'/>
<arg declared_type='NSFReturnType' type='i' name='theReturnType' index='2'/>
<arg declared_type='NSError**' type='^@' name='outError' index='3' type_modifier='o'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchObjectsWithReturnType:error:'>
<arg declared_type='NSFReturnType' type='i' name='theReturnType' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='searchWithStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='theNanoStore' index='0'/>
<retval declared_type='NSFNanoSearch*' type='@'/>
</method>
<method selector='setAttribute:'>
<arg declared_type='NSString*' type='@' name='attribute' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributesToBeReturned:'>
<arg declared_type='NSArray*' type='@' name='attributesToBeReturned' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpressions:'>
<arg declared_type='NSArray*' type='@' name='expressions' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterClass:'>
<arg declared_type='NSString*' type='@' name='filterClass' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupValues:'>
<arg declared_type='BOOL' type='B' name='groupValues' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg declared_type='NSString*' type='@' name='key' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatch:'>
<arg declared_type='NSFMatchType' type='i' name='match' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStore:'>
<arg declared_type='NSFNanoStore*' type='@' name='nanoStore' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSort:'>
<arg declared_type='NSArray*' type='@' name='sort' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg declared_type='id' type='@' name='value' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sort'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sql'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoSortDescriptor'>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithAttribute:ascending:'>
<arg declared_type='NSString*' type='@' name='theAttribute' index='0'/>
<arg declared_type='BOOL' type='B' name='ascending' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAscending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sortDescriptorWithAttribute:ascending:'>
<arg declared_type='NSString*' type='@' name='theAttribute' index='0'/>
<arg declared_type='BOOL' type='B' name='ascending' index='1'/>
<retval declared_type='NSFNanoSortDescriptor*' type='@'/>
</method>
</class>
<class name='NSFNanoStore'>
<method selector='_NSFDatatypeOfObject:'>
<arg declared_type='id' type='@' name='value' index='0'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='__storeDictionaries:forKeys:error:'>
<arg declared_type='NSArray*' type='@' name='someObjects' index='0'/>
<arg declared_type='NSArray*' type='@' name='someKeys' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_addObjectsFromArray:forceSave:error:'>
<arg declared_type='NSArray*' type='@' name='someObjects' index='0'/>
<arg declared_type='BOOL' type='B' name='forceSave' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupFileStoreToDirectoryAtPath:extension:compact:error:'>
<arg declared_type='NSString*' type='@' name='aPath' index='0'/>
<arg declared_type='NSString*' type='@' name='anExtension' index='1'/>
<arg declared_type='BOOL' type='B' name='flag' index='2'/>
<arg declared_type='NSError**' type='^@' name='outError' index='3' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupMemoryStoreToDirectoryAtPath:extension:compact:error:'>
<arg declared_type='NSString*' type='@' name='aPath' index='0'/>
<arg declared_type='NSString*' type='@' name='anExtension' index='1'/>
<arg declared_type='BOOL' type='B' name='flag' index='2'/>
<arg declared_type='NSError**' type='^@' name='outError' index='3' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_bindValue:forAttribute:parameterNumber:usingSQLite3Statement:'>
<arg declared_type='id' type='@' name='aValue' index='0'/>
<arg declared_type='NSString*' type='@' name='anAttribute' index='1'/>
<arg declared_type='NSInteger' type='i' name='aParamNumber' index='2'/>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}' name='aStatement' index='3'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_calendarDateToString:'>
<arg declared_type='NSDate*' type='@' name='aDate' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_checkNanoStoreIsReadyAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_createAndOpenDebugDatabase'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='_defaultTestData'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_executeSQL:'>
<arg declared_type='NSString*' type='@' name='theSQLStatement' index='0'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_executeSQLite3StepUsingSQLite3Statement:'>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}' name='aStatement' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keyPath:keys:values:'>
<arg declared_type='id' type='@' name='someObject' index='0'/>
<arg declared_type='NSMutableArray**' type='^@' name='aKeyPath' index='1'/>
<arg declared_type='NSMutableArray**' type='^@' name='someKeys' index='2'/>
<arg declared_type='NSMutableArray**' type='^@' name='someValues' index='3'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keys:values:'>
<arg declared_type='NSDictionary*' type='@' name='info' index='0'/>
<arg declared_type='NSMutableArray**' type='^@' name='flattenedKeys' index='1'/>
<arg declared_type='NSMutableArray**' type='^@' name='flattenedValues' index='2'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initializePreparedStatementsWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_isOurTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_nestedDescriptionWithPrefixedSpace:'>
<arg declared_type='NSString*' type='@' name='prefixedSpace' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLite3Statement:theSQLStatement:'>
<arg declared_type='sqlite3_stmt**' type='^^{sqlite3_stmt}' name='aStatement' index='0'/>
<arg declared_type='NSString*' type='@' name='aSQLQuery' index='1'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_releasePreparedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setIsOurTransaction:'>
<arg declared_type='BOOL' type='B' name='value' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setupCachingSchema'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_storeDictionary:forKey:forClassNamed:usingSQLite3Statement:error:'>
<arg declared_type='NSDictionary*' type='@' name='someInfo' index='0'/>
<arg declared_type='NSString*' type='@' name='aKey' index='1'/>
<arg declared_type='NSString*' type='@' name='classType' index='2'/>
<arg declared_type='sqlite3_stmt*' type='^{sqlite3_stmt=}' name='storeValuesStatement' index='3'/>
<arg declared_type='NSError**' type='^@' name='outError' index='4' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_stringFromValue:'>
<arg declared_type='id' type='@' name='aValue' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addObject:error:'>
<arg declared_type='id' type='@' name='theObject' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allObjectClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagWithName:'>
<arg declared_type='NSString*' type='@' name='theName' index='0'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='bags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsContainingObjectWithKey:'>
<arg declared_type='NSString*' type='@' name='theKey' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithKeysInArray:'>
<arg declared_type='NSArray*' type='@' name='theKeys' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='beginTransactionAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearIndexesAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitTransactionAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compactStoreAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='countOfObjectsOfClassNamed:'>
<arg declared_type='NSString*' type='@' name='theClassName' index='0'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='createAndOpenStoreWithType:path:error:'>
<arg declared_type='NSFNanoStoreType' type='i' name='theType' index='0'/>
<arg declared_type='NSString*' type='@' name='thePath' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='createStoreWithType:path:'>
<arg declared_type='NSFNanoStoreType' type='i' name='theType' index='0'/>
<arg declared_type='NSString*' type='@' name='thePath' index='1'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='discardUnsavedChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initStoreWithType:path:'>
<arg declared_type='NSFNanoStoreType' type='i' name='theType' index='0'/>
<arg declared_type='NSString*' type='@' name='thePath' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nanoEngineProcessingMode'>
<retval declared_type='NSFEngineProcessingMode' type='i'/>
</method>
<method selector='nanoStoreEngine'>
<retval declared_type='NSFNanoEngine*' type='@'/>
</method>
<method selector='objectsOfClassNamed:'>
<arg declared_type='NSString*' type='@' name='theClassName' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsOfClassNamed:usingSortDescriptors:'>
<arg declared_type='NSString*' type='@' name='theClassName' index='0'/>
<arg declared_type='NSArray*' type='@' name='theSortDescriptors' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsWithKeysInArray:'>
<arg declared_type='NSArray*' type='@' name='theKeys' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='openWithError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rebuildIndexesAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjectsFromStoreAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObject:error:'>
<arg declared_type='id' type='@' name='theObject' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsInArray:error:'>
<arg declared_type='NSArray*' type='@' name='theObjects' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsWithKeysInArray:error:'>
<arg declared_type='NSArray*' type='@' name='theKeys' index='0'/>
<arg declared_type='NSError**' type='^@' name='outError' index='1' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollbackTransactionAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg declared_type='NSError**' type='^@' name='outError' index='0' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveStoreToDirectoryAtPath:compactDatabase:error:'>
<arg declared_type='NSString*' type='@' name='thePath' index='0'/>
<arg declared_type='BOOL' type='B' name='shouldCompact' index='1'/>
<arg declared_type='NSError**' type='^@' name='outError' index='2' type_modifier='o'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNanoEngineProcessingMode:'>
<arg declared_type='NSFEngineProcessingMode' type='i' name='nanoEngineProcessingMode' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStoreEngine:'>
<arg declared_type='NSFNanoEngine*' type='@' name='nanoStoreEngine' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg declared_type='NSUInteger' type='I' name='saveInterval' index='0'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<arg declared_type='NSString*' type='@' name='aKey' index='1'/>
<arg declared_type='NSFNanoStore*' type='@' name='theStore' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RXMLElement'>
<method selector='attribute:'>
<arg declared_type='NSString*' type='@' name='attributeName' index='0'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attribute:inNamespace:'>
<arg declared_type='NSString*' type='@' name='attributeName' index='0'/>
<arg declared_type='NSString*' type='@' name='ns' index='1'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attributeAsDouble:'>
<arg declared_type='NSString*' type='@' name='attributeName' index='0'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='attributeAsDouble:inNamespace:'>
<arg declared_type='NSString*' type='@' name='attributeName' index='0'/>
<arg declared_type='NSString*' type='@' name='ns' index='1'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='attributeAsInt:'>
<arg declared_type='NSString*' type='@' name='attributeName' index='0'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='attributeAsInt:inNamespace:'>
<arg declared_type='NSString*' type='@' name='attributeName' index='0'/>
<arg declared_type='NSString*' type='@' name='ns' index='1'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='child:'>
<arg declared_type='NSString*' type='@' name='tag' index='0'/>
<retval declared_type='RXMLElement*' type='@'/>
</method>
<method selector='child:inNamespace:'>
<arg declared_type='NSString*' type='@' name='tag' index='0'/>
<arg declared_type='NSString*' type='@' name='ns' index='1'/>
<retval declared_type='RXMLElement*' type='@'/>
</method>
<method selector='children:'>
<arg declared_type='NSString*' type='@' name='tag' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='children:inNamespace:'>
<arg declared_type='NSString*' type='@' name='tag' index='0'/>
<arg declared_type='NSString*' type='@' name='ns' index='1'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='childrenWithRootXPath:'>
<arg declared_type='NSString*' type='@' name='xpath' index='0'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='elementFromURL:'>
<arg declared_type='NSURL*' type='@' name='url' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLData:'>
<arg declared_type='NSData*' type='@' name='data' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLFile:'>
<arg declared_type='NSString*' type='@' name='filename' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLFilename:fileExtension:'>
<arg declared_type='NSString*' type='@' name='filename' index='0'/>
<arg declared_type='NSString*' type='@' name='extension' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLNode:'>
<arg declared_type='id' type='@' name='node' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLString:encoding:'>
<arg declared_type='NSString*' type='@' name='xmlString' index='0'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromURL:'>
<arg declared_type='NSURL*' type='@' name='url' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLData:'>
<arg declared_type='NSData*' type='@' name='data' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLFile:'>
<arg declared_type='NSString*' type='@' name='filename' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLFile:fileExtension:'>
<arg declared_type='NSString*' type='@' name='filename' index='0'/>
<arg declared_type='NSString*' type='@' name='extension' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLNode:'>
<arg declared_type='id' type='@' name='node' index='0'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLString:encoding:'>
<arg declared_type='NSString*' type='@' name='xmlString' index='0'/>
<arg declared_type='NSStringEncoding' type='I' name='encoding' index='1'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='iterate:usingBlock:'>
<arg declared_type='NSString*' type='@' name='query' index='0'/>
<arg declared_type='void (^)(RXMLElement *)' type='@?' name='blk' index='1' function_pointer='true'>
<arg declared_type='RXMLElement*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='iterateElements:usingBlock:'>
<arg declared_type='NSArray*' type='@' name='elements' index='0'/>
<arg declared_type='void (^)(RXMLElement *)' type='@?' name='blk' index='1' function_pointer='true'>
<arg declared_type='RXMLElement*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='iterateWithRootXPath:usingBlock:'>
<arg declared_type='NSString*' type='@' name='xpath' index='0'/>
<arg declared_type='void (^)(RXMLElement *)' type='@?' name='blk' index='1' function_pointer='true'>
<arg declared_type='RXMLElement*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='text'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='textAsDouble'>
<retval declared_type='double' type='d'/>
</method>
<method selector='textAsInt'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='SVProgressHUD'>
<method class_method='true' selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissWithError:'>
<arg declared_type='NSString*' type='@' name='errorString' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissWithError:afterDelay:'>
<arg declared_type='NSString*' type='@' name='errorString' index='0'/>
<arg declared_type='NSTimeInterval' type='d' name='seconds' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissWithSuccess:'>
<arg declared_type='NSString*' type='@' name='successString' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissWithSuccess:afterDelay:'>
<arg declared_type='NSString*' type='@' name='successString' index='0'/>
<arg declared_type='NSTimeInterval' type='d' name='seconds' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='setStatus:'>
<arg declared_type='NSString*' type='@' name='string' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='show'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showErrorWithStatus:'>
<arg declared_type='NSString*' type='@' name='string' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showErrorWithStatus:duration:'>
<arg declared_type='NSString*' type='@' name='string' index='0'/>
<arg declared_type='NSTimeInterval' type='d' name='duration' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showImage:status:'>
<arg declared_type='UIImage*' type='@' name='image' index='0'/>
<arg declared_type='NSString*' type='@' name='status' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showSuccessWithStatus:'>
<arg declared_type='NSString*' type='@' name='string' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showSuccessWithStatus:duration:'>
<arg declared_type='NSString*' type='@' name='string' index='0'/>
<arg declared_type='NSTimeInterval' type='d' name='duration' index='1'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithMaskType:'>
<arg declared_type='SVProgressHUDMaskType' type='I' name='maskType' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithStatus:'>
<arg declared_type='NSString*' type='@' name='status' index='0'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithStatus:maskType:'>
<arg declared_type='NSString*' type='@' name='status' index='0'/>
<arg declared_type='SVProgressHUDMaskType' type='I' name='maskType' index='1'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImage'>
<method class_method='true' selector='imageWithUIView:'>
<arg declared_type='UIView*' type='@' name='view' index='0'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='UIViewController'>
<method selector='slidingViewController'>
<retval declared_type='ECSlidingViewController*' type='@'/>
</method>
</class>
<informal_protocol name='NSFNanoObjectProtocol'>
<method type='@20@0:4@8@12@16' selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg declared_type='NSDictionary*' type='@' name='theDictionary' index='0'/>
<arg declared_type='NSString*' type='@' name='aKey' index='1'/>
<arg declared_type='NSFNanoStore*' type='@' name='theStore' index='2'/>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method type='@8@0:4' selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
</signatures>
