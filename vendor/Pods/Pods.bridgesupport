<?xml version='1.0'?>
<signatures version='1.0'>
<constant declared_type='NSString*' name='ECSlidingViewTopDidAnchorLeft' const='true' type='@'/>
<constant declared_type='NSString*' name='ECSlidingViewTopDidAnchorRight' const='true' type='@'/>
<constant declared_type='NSString*' name='ECSlidingViewTopDidReset' const='true' type='@'/>
<constant declared_type='NSString*' name='ECSlidingViewUnderLeftWillAppear' const='true' type='@'/>
<constant declared_type='NSString*' name='ECSlidingViewUnderRightWillAppear' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFAttribute' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFCalendarDate' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFDatatype' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFDomainKey' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFKey' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFKeys' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFMemoryDatabase' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFNanoObjectBehaviorException' const='true' type='@'/>
<constant declared_type='NSInteger' name='NSFNanoStoreErrorKey' const='true' type='i'/>
<constant declared_type='NSString*' name='NSFNanoStoreUnableToManipulateStoreException' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFNonConformingNanoObjectProtocolException' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFObjectClass' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFP_ColumnIdentifier' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFP_DatatypeIdentifier' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFP_FullDatatypeIdentifier' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFP_SchemaTable' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFP_TableIdentifier' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFPlist' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFRowIDColumnName' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFTemporaryDatabase' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFUnexpectedParameterException' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFValue' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFValues' const='true' type='@'/>
<constant declared_type='NSString*' name='NSFVersionKey' const='true' type='@'/>
<constant declared_type='NSInteger' name='NSF_Private_InvalidParameterDataCodeKey' const='true' type='i'/>
<constant declared_type='NSInteger' name='NSF_Private_MacOSXErrorCodeKey' const='true' type='i'/>
<constant declared_type='NSString*' name='NSF_Private_NSFKeys_NSFKey' const='true' type='@'/>
<constant declared_type='NSString*' name='NSF_Private_NSFKeys_NSFPlist' const='true' type='@'/>
<constant declared_type='NSString*' name='NSF_Private_NSFNanoBag_NSFKey' const='true' type='@'/>
<constant declared_type='NSString*' name='NSF_Private_NSFNanoBag_NSFObjectKeys' const='true' type='@'/>
<constant declared_type='NSString*' name='NSF_Private_NSFNanoBag_Name' const='true' type='@'/>
<constant declared_type='NSString*' name='NSF_Private_NSFValues_NSFAttribute' const='true' type='@'/>
<constant declared_type='NSString*' name='NSF_Private_NSFValues_NSFKey' const='true' type='@'/>
<constant declared_type='NSString*' name='NSF_Private_NSFValues_NSFValue' const='true' type='@'/>
<constant declared_type='NSString*' name='NSF_Private_ToDeleteTableKey' const='true' type='@'/>
<enum value='1' name='CacheAllData'/>
<enum value='2' name='CacheDataOnDemand'/>
<enum value='3' name='DoNotCacheData'/>
<enum value='1' name='ECFixedRevealWidth'/>
<enum value='0' name='ECFullWidth'/>
<enum value='0' name='ECLeft'/>
<enum value='0' name='ECNone'/>
<enum value='2' name='ECPanning'/>
<enum value='1' name='ECRight'/>
<enum value='1' name='ECTapping'/>
<enum value='2' name='ECVariableRevealWidth'/>
<enum value='0' name='JournalModeDelete'/>
<enum value='3' name='JournalModeMemory'/>
<enum value='5' name='JournalModeOFF'/>
<enum value='2' name='JournalModePersist'/>
<enum value='1' name='JournalModeTruncate'/>
<enum value='4' name='JournalModeWAL'/>
<enum value='3' name='NSFAfterDate'/>
<enum value='1' name='NSFAnd'/>
<enum value='2' name='NSFAttributeColumn'/>
<enum value='1' name='NSFAverage'/>
<enum value='1' name='NSFBeforeDate'/>
<enum value='1' name='NSFBeginsWith'/>
<enum value='2' name='NSFContains'/>
<enum value='2' name='NSFCount'/>
<enum value='2' name='NSFEncodingUTF16'/>
<enum value='1' name='NSFEncodingUTF8'/>
<enum value='3' name='NSFEncodingUnknown'/>
<enum value='3' name='NSFEndsWith'/>
<enum value='1' name='NSFEngineProcessingDefaultMode'/>
<enum value='2' name='NSFEngineProcessingFastMode'/>
<enum value='0' name='NSFEqualTo'/>
<enum value='8' name='NSFGreaterThan'/>
<enum value='5' name='NSFInsensitiveBeginsWith'/>
<enum value='6' name='NSFInsensitiveContains'/>
<enum value='7' name='NSFInsensitiveEndsWith'/>
<enum value='4' name='NSFInsensitiveEqualTo'/>
<enum value='1' name='NSFKeyColumn'/>
<enum value='9' name='NSFLessThan'/>
<enum value='3' name='NSFMax'/>
<enum value='1' name='NSFMemoryStoreType'/>
<enum value='4' name='NSFMin'/>
<enum value='1' name='NSFNanoTypeData'/>
<enum value='3' name='NSFNanoTypeDate'/>
<enum value='4' name='NSFNanoTypeNumber'/>
<enum value='0' name='NSFNanoTypeRowUID'/>
<enum value='2' name='NSFNanoTypeString'/>
<enum value='-1' name='NSFNanoTypeUnknown'/>
<enum value='2' name='NSFOnDate'/>
<enum value='2' name='NSFOr'/>
<enum value='3' name='NSFPersistentStoreType'/>
<enum value='2' name='NSFReturnKeys'/>
<enum value='1' name='NSFReturnObjects'/>
<enum value='2' name='NSFTemporaryStoreType'/>
<enum value='5' name='NSFTotal'/>
<enum value='3' name='NSFValueColumn'/>
<enum value='3' name='SVProgressHUDMaskTypeBlack'/>
<enum value='2' name='SVProgressHUDMaskTypeClear'/>
<enum value='4' name='SVProgressHUDMaskTypeGradient'/>
<enum value='1' name='SVProgressHUDMaskTypeNone'/>
<enum value='2' name='SynchronousModeFull'/>
<enum value='1' name='SynchronousModeNormal'/>
<enum value='0' name='SynchronousModeOff'/>
<enum value='0' name='TempStoreModeDefault'/>
<enum value='1' name='TempStoreModeFile'/>
<enum value='2' name='TempStoreModeMemory'/>
<function name='NSFIsDebugOn'>
<retval declared_type='BOOL' type='B'/>
</function>
<function name='NSFNanoDatatypeFromString'>
<arg declared_type='NSString*' name='aNanoDatatype' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</function>
<function name='NSFSetIsDebugOn'>
<arg declared_type='BOOL' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</function>
<function name='NSFStringFromMatchType'>
<arg declared_type='NSFMatchType' name='aMatchType' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<function name='NSFStringFromNanoDataType'>
<arg declared_type='NSFNanoDatatype' name='aNanoDatatype' type='i'/>
<retval declared_type='NSString*' type='@'/>
</function>
<class name='ECSlidingViewController'>
<method selector='anchorLeftPeekAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorLeftRevealAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorRightPeekAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorRightRevealAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorTopViewOffScreenTo:'>
<arg index='0' declared_type='ECSide' name='side' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewOffScreenTo:animations:onComplete:'>
<arg index='0' declared_type='ECSide' name='side' type='i'/>
<arg index='1' function_pointer='true' declared_type='void (^)()' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' function_pointer='true' declared_type='void (^)()' name='complete' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewTo:'>
<arg index='0' declared_type='ECSide' name='side' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewTo:animations:onComplete:'>
<arg index='0' declared_type='ECSide' name='side' type='i'/>
<arg index='1' function_pointer='true' declared_type='void (^)()' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg index='2' function_pointer='true' declared_type='void (^)()' name='complete' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='panGesture'>
<retval declared_type='UIPanGestureRecognizer*' type='@'/>
</method>
<method selector='resetStrategy'>
<retval declared_type='ECResetStrategy' type='i'/>
</method>
<method selector='resetTopView'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetTopViewWithAnimations:onComplete:'>
<arg index='0' function_pointer='true' declared_type='void (^)()' name='animations' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<arg index='1' function_pointer='true' declared_type='void (^)()' name='complete' type='@?'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorLeftPeekAmount:'>
<arg index='0' declared_type='CGFloat' name='anchorLeftPeekAmount' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorLeftRevealAmount:'>
<arg index='0' declared_type='CGFloat' name='anchorLeftRevealAmount' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorRightPeekAmount:'>
<arg index='0' declared_type='CGFloat' name='anchorRightPeekAmount' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorRightRevealAmount:'>
<arg index='0' declared_type='CGFloat' name='anchorRightRevealAmount' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResetStrategy:'>
<arg index='0' declared_type='ECResetStrategy' name='resetStrategy' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldAllowUserInteractionsWhenAnchored:'>
<arg index='0' declared_type='BOOL' name='shouldAllowUserInteractionsWhenAnchored' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopViewController:'>
<arg index='0' declared_type='UIViewController*' name='topViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderLeftViewController:'>
<arg index='0' declared_type='UIViewController*' name='underLeftViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderLeftWidthLayout:'>
<arg index='0' declared_type='ECViewWidthLayout' name='underLeftWidthLayout' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderRightViewController:'>
<arg index='0' declared_type='UIViewController*' name='underRightViewController' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderRightWidthLayout:'>
<arg index='0' declared_type='ECViewWidthLayout' name='underRightWidthLayout' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAllowUserInteractionsWhenAnchored'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='topViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='topViewIsOffScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underLeftShowing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underLeftViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='underLeftWidthLayout'>
<retval declared_type='ECViewWidthLayout' type='i'/>
</method>
<method selector='underRightShowing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underRightViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='underRightWidthLayout'>
<retval declared_type='ECViewWidthLayout' type='i'/>
</method>
</class>
<class name='NSFNanoBag'>
<method selector='_inflateObjectsWithKeys:'>
<arg index='0' declared_type='NSArray*' name='someKeys' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_saveInStore:error:'>
<arg index='0' declared_type='NSFNanoStore*' name='someStore' type='@'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_setStore:'>
<arg index='0' declared_type='NSFNanoStore*' name='aStore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addObject:error:'>
<arg index='0' declared_type='id' name='theObject' type='@'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg index='0' declared_type='NSArray*' name='theObjects' type='@'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='bag'>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method class_method='true' selector='bagWithName:'>
<arg index='0' declared_type='NSString*' name='theName' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithName:andObjects:'>
<arg index='0' declared_type='NSString*' name='theName' type='@'/>
<arg index='1' declared_type='NSArray*' name='theObjects' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='bagWithObjects:'>
<arg index='0' declared_type='NSArray*' name='theObjects' type='@'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='count'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='deflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='inflateBag'>
<retval declared_type='void' type='v'/>
</method>
<method selector='initBagWithName:andObjects:'>
<arg index='0' declared_type='NSString*' name='theName' type='@'/>
<arg index='1' declared_type='NSArray*' name='someObjects' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoBag:'>
<arg index='0' declared_type='NSFNanoBag*' name='otherNanoBag' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='name'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='reloadBagWithError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObject:'>
<arg index='0' declared_type='id' name='theObject' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectWithKey:'>
<arg index='0' declared_type='NSString*' name='theObjectKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsInArray:'>
<arg index='0' declared_type='NSArray*' name='theObjects' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsWithKeysInArray:'>
<arg index='0' declared_type='NSArray*' name='theKeys' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='saveAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='savedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='setName:'>
<arg index='0' declared_type='NSString*' name='name' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setStore:'>
<arg index='0' declared_type='NSFNanoStore*' name='store' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='store'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='undoChangesWithError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='unsavedObjects'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
</class>
<class name='NSFNanoEngine'>
<method class_method='true' selector='NSFEncodingTypeToNSString:'>
<arg index='0' declared_type='NSFEncodingType' name='value' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_ROWIDPresenceLocation:datatypes:'>
<arg index='0' declared_type='NSArray*' name='tableColumns' type='@'/>
<arg index='1' declared_type='NSArray*' name='datatypes' type='@'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='NSFP_beginTransactionMode:'>
<arg index='0' declared_type='NSString*' name='theSQLStatement' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_cacheMethodToString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_createTable:withColumns:datatypes:isTemporary:'>
<arg index='0' declared_type='NSString*' name='table' type='@'/>
<arg index='1' declared_type='NSArray*' name='tableColumns' type='@'/>
<arg index='2' declared_type='NSArray*' name='tableDatatypes' type='@'/>
<arg index='3' declared_type='BOOL' name='isTemporaryFlag' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_datatypeForColumn:'>
<arg index='0' declared_type='NSString*' name='tableAndColumn' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='NSFP_datatypeForTable:column:'>
<arg index='0' declared_type='NSString*' name='table' type='@'/>
<arg index='1' declared_type='NSString*' name='column' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method class_method='true' selector='NSFP_decodeQuantum:andSource:'>
<arg index='0' declared_type='unsigned char*' name='dest' type='*'/>
<arg index='1' declared_type='char*' name='src' const='true' type='*'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_flattenAllTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_insertStringValues:forColumns:table:'>
<arg index='0' declared_type='NSArray*' name='values' type='@'/>
<arg index='1' declared_type='NSArray*' name='columns' type='@'/>
<arg index='2' declared_type='NSString*' name='table' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_installCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_isColumnROWIDAlias:forTable:'>
<arg index='0' declared_type='NSString*' name='column' type='@'/>
<arg index='1' declared_type='NSString*' name='table' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_nestedDescriptionWithPrefixedSpace:'>
<arg index='0' declared_type='NSString*' name='prefixedSpace' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prefixWithDotDelimiter:'>
<arg index='0' declared_type='NSString*' name='tableAndColumn' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_prepareSQLite3Statement:theSQLStatement:'>
<arg index='0' declared_type='sqlite3_stmt**' name='aStatement' type='^^{sqlite3_stmt}'/>
<arg index='1' declared_type='NSString*' name='aSQLQuery' type='@'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='NSFP_rebuildDatatypeCache'>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_removeColumn:fromTable:'>
<arg index='0' declared_type='NSString*' name='column' type='@'/>
<arg index='1' declared_type='NSString*' name='table' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='NSFP_setFullColumnNamesEnabled'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSFP_sharedROWIDKeywords'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='NSFP_sqlString:appendingTags:'>
<arg index='0' declared_type='NSMutableString*' name='theSQLStatement' type='@'/>
<arg index='1' declared_type='NSArray*' name='columns' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:appendingTags:quoteTags:'>
<arg index='0' declared_type='NSMutableString*' name='theSQLStatement' type='@'/>
<arg index='1' declared_type='NSArray*' name='tags' type='@'/>
<arg index='2' declared_type='BOOL' name='flag' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='NSFP_sqlString:forTable:withColumns:datatypes:'>
<arg index='0' declared_type='NSMutableString*' name='theSQLStatement' type='@'/>
<arg index='1' declared_type='NSString*' name='table' type='@'/>
<arg index='2' declared_type='NSArray*' name='columns' type='@'/>
<arg index='3' declared_type='NSArray*' name='datatypes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='NSFP_stripBitsFromExtendedResultCode:'>
<arg index='0' declared_type='int' name='extendedResult' type='i'/>
<retval declared_type='int' type='i'/>
</method>
<method selector='NSFP_suffixWithDotDelimiter:'>
<arg index='0' declared_type='NSString*' name='tableAndColumn' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='NSFP_uninstallCommitCallback'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='NSStringToNSFEncodingType:'>
<arg index='0' declared_type='NSString*' name='value' type='@'/>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method class_method='true' selector='_plistToDictionary:'>
<arg index='0' declared_type='NSString*' name='aPlist' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='allTables'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='beginDeferredTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='beginTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='busyTimeout'>
<retval declared_type='unsigned int' type='I'/>
</method>
<method selector='cacheMethod'>
<retval declared_type='NSFCacheMethod' type='i'/>
</method>
<method selector='cacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='close'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='columnsForTable:'>
<arg index='0' declared_type='NSString*' name='theTable' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='commitTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compact'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createIndexForColumn:table:isUnique:'>
<arg index='0' declared_type='NSString*' name='theColumn' type='@'/>
<arg index='1' declared_type='NSString*' name='theTable' type='@'/>
<arg index='2' declared_type='BOOL' name='isUnique' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='createTable:withColumns:datatypes:'>
<arg index='0' declared_type='NSString*' name='theTable' type='@'/>
<arg index='1' declared_type='NSArray*' name='theColumns' type='@'/>
<arg index='2' declared_type='NSArray*' name='theDatatypes' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='databaseWithPath:'>
<arg index='0' declared_type='NSString*' name='thePath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='datatypesForTable:'>
<arg index='0' declared_type='NSString*' name='theTable' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='decodeDataFromBase64:'>
<arg index='0' declared_type='NSString*' name='theEncodedData' type='@'/>
<retval declared_type='NSData*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dropIndex:'>
<arg index='0' declared_type='NSString*' name='theIndex' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='dropTable:'>
<arg index='0' declared_type='NSString*' name='theTable' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='encodeDataToBase64:'>
<arg index='0' declared_type='NSData*' name='theData' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='encoding'>
<retval declared_type='NSFEncodingType' type='i'/>
</method>
<method selector='executeSQL:'>
<arg index='0' declared_type='NSString*' name='theSQLStatement' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='indexedColumnsForTable:'>
<arg index='0' declared_type='NSString*' name='theTable' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='indexes'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='initWithPath:'>
<arg index='0' declared_type='NSString*' name='thePath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='integrityCheck'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isDatabaseOpen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='isTransactionActive'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='journalModeAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='NSFJournalModeMode' type='i'/>
</method>
<method selector='maxRowUIDForTable:'>
<arg index='0' declared_type='NSString*' name='theTable' type='@'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='nanoStoreEngineVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='openWithCacheMethod:useFastMode:'>
<arg index='0' declared_type='NSFCacheMethod' name='theCacheMethod' type='i'/>
<arg index='1' declared_type='BOOL' name='useFastMode' type='B'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='pageSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='path'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='recommendedCacheSize'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='rollbackTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setBusyTimeout:'>
<arg index='0' declared_type='unsigned int' name='theTimeout' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheMethod:'>
<arg index='0' declared_type='NSFCacheMethod' name='cacheMethod' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setCacheSize:'>
<arg index='0' declared_type='NSUInteger' name='numberOfPages' type='I'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setEncodingType:'>
<arg index='0' declared_type='NSFEncodingType' name='theEncodingType' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setJournalMode:'>
<arg index='0' declared_type='NSFJournalModeMode' name='theMode' type='i'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setPageSize:'>
<arg index='0' declared_type='NSUInteger' name='numberOfBytes' type='I'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setSynchronousMode:'>
<arg index='0' declared_type='NSFSynchronousMode' name='theSynchronousMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTempStoreMode:'>
<arg index='0' declared_type='NSFTempStoreMode' name='theTempStoreMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='sharedNanoStoreEngineDatatypes'>
<retval declared_type='NSSet*' type='@'/>
</method>
<method selector='sqlite'>
<retval declared_type='sqlite3*' type='^{sqlite3=}'/>
</method>
<method class_method='true' selector='sqliteVersion'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='stringWithUUID'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='synchronousMode'>
<retval declared_type='NSFSynchronousMode' type='i'/>
</method>
<method class_method='true' selector='systemPageSize'>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='tables'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='tempStoreMode'>
<retval declared_type='NSFTempStoreMode' type='i'/>
</method>
<method selector='temporaryTables'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoExpression'>
<method selector='addPredicate:withOperator:'>
<arg index='0' declared_type='NSFNanoPredicate*' name='thePredicate' type='@'/>
<arg index='1' declared_type='NSFOperator' name='theOperator' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='expressionWithPredicate:'>
<arg index='0' declared_type='NSFNanoPredicate*' name='thePredicate' type='@'/>
<retval declared_type='NSFNanoExpression*' type='@'/>
</method>
<method selector='initWithPredicate:'>
<arg index='0' declared_type='NSFNanoPredicate*' name='thePredicate' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='operators'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='predicates'>
<retval declared_type='NSArray*' type='@'/>
</method>
</class>
<class name='NSFNanoObject'>
<method selector='_setOriginalClassString:'>
<arg index='0' declared_type='NSString*' name='theClassString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='addEntriesFromDictionary:'>
<arg index='0' declared_type='NSDictionary*' name='otherDictionary' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='dictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='info'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:'>
<arg index='0' declared_type='NSDictionary*' name='theDictionary' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromDictionaryRepresentation:key:'>
<arg index='0' declared_type='NSDictionary*' name='theDictionary' type='@'/>
<arg index='1' declared_type='NSString*' name='theKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isEqualToNanoObject:'>
<arg index='0' declared_type='NSFNanoObject*' name='otherNanoObject' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='nanoObject'>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:'>
<arg index='0' declared_type='NSDictionary*' name='theDictionary' type='@'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method class_method='true' selector='nanoObjectWithDictionary:key:'>
<arg index='0' declared_type='NSDictionary*' name='theDictionary' type='@'/>
<arg index='1' declared_type='NSString*' name='theKey' type='@'/>
<retval declared_type='NSFNanoObject*' type='@'/>
</method>
<method selector='objectForKey:'>
<arg index='0' declared_type='NSString*' name='aKey' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='originalClassString'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='removeAllObjects'>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectForKey:'>
<arg index='0' declared_type='NSString*' name='aKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='removeObjectsForKeys:'>
<arg index='0' declared_type='NSArray*' name='keyArray' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setObject:forKey:'>
<arg index='0' declared_type='id' name='anObject' type='@'/>
<arg index='1' declared_type='NSString*' name='aKey' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFNanoPredicate'>
<method selector='column'>
<retval declared_type='NSFTableColumnType' type='i'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithColumn:matching:value:'>
<arg index='0' declared_type='NSFTableColumnType' name='theType' type='i'/>
<arg index='1' declared_type='NSFMatchType' name='theMatch' type='i'/>
<arg index='2' declared_type='NSString*' name='theValue' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method class_method='true' selector='predicateWithColumn:matching:value:'>
<arg index='0' declared_type='NSFTableColumnType' name='theType' type='i'/>
<arg index='1' declared_type='NSFMatchType' name='theMatch' type='i'/>
<arg index='2' declared_type='NSString*' name='theValue' type='@'/>
<retval declared_type='NSFNanoPredicate*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='NSString*' type='@'/>
</method>
</class>
<class name='NSFNanoResult'>
<method selector='_calculateNumberOfRows'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initWithDictionary:'>
<arg index='0' declared_type='NSDictionary*' name='results' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_initWithError:'>
<arg index='0' declared_type='NSError*' name='error' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='_reset'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='_resultWithDictionary:'>
<arg index='0' declared_type='NSDictionary*' name='results' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method class_method='true' selector='_resultWithError:'>
<arg index='0' declared_type='NSError*' name='error' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_setError:'>
<arg index='0' declared_type='NSError*' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='columns'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='error'>
<retval declared_type='NSError*' type='@'/>
</method>
<method selector='firstValue'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='numberOfRows'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='setError:'>
<arg index='0' declared_type='NSError*' name='error' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='valueAtIndex:forColumn:'>
<arg index='0' declared_type='NSUInteger' name='theIndex' type='I'/>
<arg index='1' declared_type='NSString*' name='theColumn' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='valuesForColumn:'>
<arg index='0' declared_type='NSString*' name='theColumn' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='writeToFile:'>
<arg index='0' declared_type='NSString*' name='thePath' type='@'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSFNanoSearch'>
<method selector='_dataWithKey:attribute:value:matching:'>
<arg index='0' declared_type='NSString*' name='aKey' type='@'/>
<arg index='1' declared_type='NSString*' name='anAttribute' type='@'/>
<arg index='2' declared_type='NSString*' name='aValue' type='@'/>
<arg index='3' declared_type='NSFMatchType' name='match' type='i'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dataWithKey:attribute:value:matching:returning:'>
<arg index='0' declared_type='NSString*' name='aKey' type='@'/>
<arg index='1' declared_type='NSString*' name='anAttribute' type='@'/>
<arg index='2' declared_type='NSString*' name='aValue' type='@'/>
<arg index='3' declared_type='NSFMatchType' name='match' type='i'/>
<arg index='4' declared_type='NSFReturnType' name='returnedObjectType' type='i'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_dictionaryForKeyPath:value:'>
<arg index='0' declared_type='NSString*' name='keyPath' type='@'/>
<arg index='1' declared_type='id' name='value' type='@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithExpressions:'>
<arg index='0' declared_type='NSArray*' name='someExpressions' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLQueryStringWithKey:attribute:value:matching:'>
<arg index='0' declared_type='NSString*' name='aKey' type='@'/>
<arg index='1' declared_type='NSString*' name='anAttribute' type='@'/>
<arg index='2' declared_type='id' name='aValue' type='@'/>
<arg index='3' declared_type='NSFMatchType' name='match' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_prepareSQLQueryStringWithKeys:'>
<arg index='0' declared_type='NSArray*' name='someKeys' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_preparedSQL'>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForAttributeColumnWithValue:matching:valueColumnWithValue:'>
<arg index='0' declared_type='id' name='anAttributeValue' type='@'/>
<arg index='1' declared_type='NSFMatchType' name='match' type='i'/>
<arg index='2' declared_type='id' name='aValue' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_querySegmentForColumn:value:matching:'>
<arg index='0' declared_type='NSString*' name='aColumn' type='@'/>
<arg index='1' declared_type='id' name='aValue' type='@'/>
<arg index='2' declared_type='NSFMatchType' name='match' type='i'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method class_method='true' selector='_quoteStrings:joiningWithDelimiter:'>
<arg index='0' declared_type='NSArray*' name='strings' type='@'/>
<arg index='1' declared_type='NSString*' name='delimiter' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_resultsFromSQLQuery:'>
<arg index='0' declared_type='NSString*' name='theSQLStatement' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='_retrieveDataAdded:calendarDate:error:'>
<arg index='0' declared_type='NSFDateMatchType' name='aDateMatch' type='i'/>
<arg index='1' declared_type='NSDate*' name='aDate' type='@'/>
<arg index='2' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_retrieveDataWithError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_sortResultsIfApplicable:returnType:'>
<arg index='0' declared_type='NSDictionary*' name='results' type='@'/>
<arg index='1' declared_type='NSFReturnType' name='theReturnType' type='i'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='aggregateOperation:onAttribute:'>
<arg index='0' declared_type='NSFAggregateFunctionType' name='theFunctionType' type='i'/>
<arg index='1' declared_type='NSString*' name='theAttribute' type='@'/>
<retval declared_type='NSNumber*' type='@'/>
</method>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attributesToBeReturned'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='executeSQL:'>
<arg index='0' declared_type='NSString*' name='theSQLStatement' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='executeSQL:returnType:error:'>
<arg index='0' declared_type='NSString*' name='theSQLStatement' type='@'/>
<arg index='1' declared_type='NSFReturnType' name='theReturnType' type='i'/>
<arg index='2' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='explainSQL:'>
<arg index='0' declared_type='NSString*' name='theSQLStatement' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='expressions'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='filterClass'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='groupValues'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initWithStore:'>
<arg index='0' declared_type='NSFNanoStore*' name='theNanoStore' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='key'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='match'>
<retval declared_type='NSFMatchType' type='i'/>
</method>
<method selector='nanoStore'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='reset'>
<retval declared_type='void' type='v'/>
</method>
<method selector='searchObjectsAdded:date:returnType:error:'>
<arg index='0' declared_type='NSFDateMatchType' name='theDateMatch' type='i'/>
<arg index='1' declared_type='NSDate*' name='theDate' type='@'/>
<arg index='2' declared_type='NSFReturnType' name='theReturnType' type='i'/>
<arg index='3' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='searchObjectsWithReturnType:error:'>
<arg index='0' declared_type='NSFReturnType' name='theReturnType' type='i'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='searchWithStore:'>
<arg index='0' declared_type='NSFNanoStore*' name='theNanoStore' type='@'/>
<retval declared_type='NSFNanoSearch*' type='@'/>
</method>
<method selector='setAttribute:'>
<arg index='0' declared_type='NSString*' name='attribute' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAttributesToBeReturned:'>
<arg index='0' declared_type='NSArray*' name='attributesToBeReturned' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setExpressions:'>
<arg index='0' declared_type='NSArray*' name='expressions' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setFilterClass:'>
<arg index='0' declared_type='NSString*' name='filterClass' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setGroupValues:'>
<arg index='0' declared_type='BOOL' name='groupValues' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setKey:'>
<arg index='0' declared_type='NSString*' name='key' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setMatch:'>
<arg index='0' declared_type='NSFMatchType' name='match' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStore:'>
<arg index='0' declared_type='NSFNanoStore*' name='nanoStore' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSort:'>
<arg index='0' declared_type='NSArray*' name='sort' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setValue:'>
<arg index='0' declared_type='id' name='value' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='sort'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='sql'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='value'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='NSFNanoSortDescriptor'>
<method selector='attribute'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='initWithAttribute:ascending:'>
<arg index='0' declared_type='NSString*' name='theAttribute' type='@'/>
<arg index='1' declared_type='BOOL' name='ascending' type='B'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isAscending'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='sortDescriptorWithAttribute:ascending:'>
<arg index='0' declared_type='NSString*' name='theAttribute' type='@'/>
<arg index='1' declared_type='BOOL' name='ascending' type='B'/>
<retval declared_type='NSFNanoSortDescriptor*' type='@'/>
</method>
</class>
<class name='NSFNanoStore'>
<method selector='_NSFDatatypeOfObject:'>
<arg index='0' declared_type='id' name='value' type='@'/>
<retval declared_type='NSFNanoDatatype' type='i'/>
</method>
<method selector='__storeDictionaries:forKeys:error:'>
<arg index='0' declared_type='NSArray*' name='someObjects' type='@'/>
<arg index='1' declared_type='NSArray*' name='someKeys' type='@'/>
<arg index='2' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_addObjectsFromArray:forceSave:error:'>
<arg index='0' declared_type='NSArray*' name='someObjects' type='@'/>
<arg index='1' declared_type='BOOL' name='forceSave' type='B'/>
<arg index='2' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupFileStoreToDirectoryAtPath:extension:compact:error:'>
<arg index='0' declared_type='NSString*' name='aPath' type='@'/>
<arg index='1' declared_type='NSString*' name='anExtension' type='@'/>
<arg index='2' declared_type='BOOL' name='flag' type='B'/>
<arg index='3' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_backupMemoryStoreToDirectoryAtPath:extension:compact:error:'>
<arg index='0' declared_type='NSString*' name='aPath' type='@'/>
<arg index='1' declared_type='NSString*' name='anExtension' type='@'/>
<arg index='2' declared_type='BOOL' name='flag' type='B'/>
<arg index='3' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_bindValue:forAttribute:parameterNumber:usingSQLite3Statement:'>
<arg index='0' declared_type='id' name='aValue' type='@'/>
<arg index='1' declared_type='NSString*' name='anAttribute' type='@'/>
<arg index='2' declared_type='NSInteger' name='aParamNumber' type='i'/>
<arg index='3' declared_type='sqlite3_stmt*' name='aStatement' type='^{sqlite3_stmt=}'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_calendarDateToString:'>
<arg index='0' declared_type='NSDate*' name='aDate' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_checkNanoStoreIsReadyAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='_createAndOpenDebugDatabase'>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='_defaultTestData'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='_executeSQL:'>
<arg index='0' declared_type='NSString*' name='theSQLStatement' type='@'/>
<retval declared_type='NSFNanoResult*' type='@'/>
</method>
<method selector='_executeSQLite3StepUsingSQLite3Statement:'>
<arg index='0' declared_type='sqlite3_stmt*' name='aStatement' type='^{sqlite3_stmt=}'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keyPath:keys:values:'>
<arg index='0' declared_type='id' name='someObject' type='@'/>
<arg index='1' declared_type='NSMutableArray**' name='aKeyPath' type='^@'/>
<arg index='2' declared_type='NSMutableArray**' name='someKeys' type='^@'/>
<arg index='3' declared_type='NSMutableArray**' name='someValues' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_flattenCollection:keys:values:'>
<arg index='0' declared_type='NSDictionary*' name='info' type='@'/>
<arg index='1' declared_type='NSMutableArray**' name='flattenedKeys' type='^@'/>
<arg index='2' declared_type='NSMutableArray**' name='flattenedValues' type='^@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_initializePreparedStatementsWithError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_isOurTransaction'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_nestedDescriptionWithPrefixedSpace:'>
<arg index='0' declared_type='NSString*' name='prefixedSpace' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='_prepareSQLite3Statement:theSQLStatement:'>
<arg index='0' declared_type='sqlite3_stmt**' name='aStatement' type='^^{sqlite3_stmt}'/>
<arg index='1' declared_type='NSString*' name='aSQLQuery' type='@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_releasePreparedStatements'>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setIsOurTransaction:'>
<arg index='0' declared_type='BOOL' name='value' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='_setupCachingSchema'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_storeDictionary:forKey:forClassNamed:usingSQLite3Statement:error:'>
<arg index='0' declared_type='NSDictionary*' name='someInfo' type='@'/>
<arg index='1' declared_type='NSString*' name='aKey' type='@'/>
<arg index='2' declared_type='NSString*' name='classType' type='@'/>
<arg index='3' declared_type='sqlite3_stmt*' name='storeValuesStatement' type='^{sqlite3_stmt=}'/>
<arg index='4' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='_stringFromValue:'>
<arg index='0' declared_type='id' name='aValue' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='addObject:error:'>
<arg index='0' declared_type='id' name='theObject' type='@'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='addObjectsFromArray:error:'>
<arg index='0' declared_type='NSArray*' name='theObjects' type='@'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='allObjectClasses'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagWithName:'>
<arg index='0' declared_type='NSString*' name='theName' type='@'/>
<retval declared_type='NSFNanoBag*' type='@'/>
</method>
<method selector='bags'>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsContainingObjectWithKey:'>
<arg index='0' declared_type='NSString*' name='theKey' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='bagsWithKeysInArray:'>
<arg index='0' declared_type='NSArray*' name='theKeys' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='beginTransactionAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='clearIndexesAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='closeWithError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='commitTransactionAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='compactStoreAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='countOfObjectsOfClassNamed:'>
<arg index='0' declared_type='NSString*' name='theClassName' type='@'/>
<retval declared_type='long long' type='q'/>
</method>
<method class_method='true' selector='createAndOpenStoreWithType:path:error:'>
<arg index='0' declared_type='NSFNanoStoreType' name='theType' type='i'/>
<arg index='1' declared_type='NSString*' name='thePath' type='@'/>
<arg index='2' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method class_method='true' selector='createStoreWithType:path:'>
<arg index='0' declared_type='NSFNanoStoreType' name='theType' type='i'/>
<arg index='1' declared_type='NSString*' name='thePath' type='@'/>
<retval declared_type='NSFNanoStore*' type='@'/>
</method>
<method selector='description'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='discardUnsavedChanges'>
<retval declared_type='void' type='v'/>
</method>
<method selector='filePath'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='hasUnsavedChanges'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='initStoreWithType:path:'>
<arg index='0' declared_type='NSFNanoStoreType' name='theType' type='i'/>
<arg index='1' declared_type='NSString*' name='thePath' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isClosed'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='nanoEngineProcessingMode'>
<retval declared_type='NSFEngineProcessingMode' type='i'/>
</method>
<method selector='nanoStoreEngine'>
<retval declared_type='NSFNanoEngine*' type='@'/>
</method>
<method selector='objectsOfClassNamed:'>
<arg index='0' declared_type='NSString*' name='theClassName' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsOfClassNamed:usingSortDescriptors:'>
<arg index='0' declared_type='NSString*' name='theClassName' type='@'/>
<arg index='1' declared_type='NSArray*' name='theSortDescriptors' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='objectsWithKeysInArray:'>
<arg index='0' declared_type='NSArray*' name='theKeys' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='openWithError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rebuildIndexesAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeAllObjectsFromStoreAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObject:error:'>
<arg index='0' declared_type='id' name='theObject' type='@'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsInArray:error:'>
<arg index='0' declared_type='NSArray*' name='theObjects' type='@'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='removeObjectsWithKeysInArray:error:'>
<arg index='0' declared_type='NSArray*' name='theKeys' type='@'/>
<arg index='1' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='rollbackTransactionAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveInterval'>
<retval declared_type='NSUInteger' type='I'/>
</method>
<method selector='saveStoreAndReturnError:'>
<arg index='0' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='saveStoreToDirectoryAtPath:compactDatabase:error:'>
<arg index='0' declared_type='NSString*' name='thePath' type='@'/>
<arg index='1' declared_type='BOOL' name='shouldCompact' type='B'/>
<arg index='2' declared_type='NSError**' type_modifier='o' name='outError' type='^@'/>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='setNanoEngineProcessingMode:'>
<arg index='0' declared_type='NSFEngineProcessingMode' name='nanoEngineProcessingMode' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setNanoStoreEngine:'>
<arg index='0' declared_type='NSFNanoEngine*' name='nanoStoreEngine' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setSaveInterval:'>
<arg index='0' declared_type='NSUInteger' name='saveInterval' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='NSObject'>
<method selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg index='0' declared_type='NSDictionary*' name='theDictionary' type='@'/>
<arg index='1' declared_type='NSString*' name='aKey' type='@'/>
<arg index='2' declared_type='NSFNanoStore*' name='theStore' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
</class>
<class name='RXMLElement'>
<method selector='attribute:'>
<arg index='0' declared_type='NSString*' name='attributeName' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attribute:inNamespace:'>
<arg index='0' declared_type='NSString*' name='attributeName' type='@'/>
<arg index='1' declared_type='NSString*' name='ns' type='@'/>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='attributeAsDouble:'>
<arg index='0' declared_type='NSString*' name='attributeName' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='attributeAsDouble:inNamespace:'>
<arg index='0' declared_type='NSString*' name='attributeName' type='@'/>
<arg index='1' declared_type='NSString*' name='ns' type='@'/>
<retval declared_type='double' type='d'/>
</method>
<method selector='attributeAsInt:'>
<arg index='0' declared_type='NSString*' name='attributeName' type='@'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='attributeAsInt:inNamespace:'>
<arg index='0' declared_type='NSString*' name='attributeName' type='@'/>
<arg index='1' declared_type='NSString*' name='ns' type='@'/>
<retval declared_type='NSInteger' type='i'/>
</method>
<method selector='child:'>
<arg index='0' declared_type='NSString*' name='tag' type='@'/>
<retval declared_type='RXMLElement*' type='@'/>
</method>
<method selector='child:inNamespace:'>
<arg index='0' declared_type='NSString*' name='tag' type='@'/>
<arg index='1' declared_type='NSString*' name='ns' type='@'/>
<retval declared_type='RXMLElement*' type='@'/>
</method>
<method selector='children:'>
<arg index='0' declared_type='NSString*' name='tag' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='children:inNamespace:'>
<arg index='0' declared_type='NSString*' name='tag' type='@'/>
<arg index='1' declared_type='NSString*' name='ns' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method selector='childrenWithRootXPath:'>
<arg index='0' declared_type='NSString*' name='xpath' type='@'/>
<retval declared_type='NSArray*' type='@'/>
</method>
<method class_method='true' selector='elementFromURL:'>
<arg index='0' declared_type='NSURL*' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLData:'>
<arg index='0' declared_type='NSData*' name='data' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLFile:'>
<arg index='0' declared_type='NSString*' name='filename' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLFilename:fileExtension:'>
<arg index='0' declared_type='NSString*' name='filename' type='@'/>
<arg index='1' declared_type='NSString*' name='extension' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLNode:'>
<arg index='0' declared_type='id' name='node' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method class_method='true' selector='elementFromXMLString:encoding:'>
<arg index='0' declared_type='NSString*' name='xmlString' type='@'/>
<arg index='1' declared_type='NSStringEncoding' name='encoding' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromURL:'>
<arg index='0' declared_type='NSURL*' name='url' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLData:'>
<arg index='0' declared_type='NSData*' name='data' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLFile:'>
<arg index='0' declared_type='NSString*' name='filename' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLFile:fileExtension:'>
<arg index='0' declared_type='NSString*' name='filename' type='@'/>
<arg index='1' declared_type='NSString*' name='extension' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLNode:'>
<arg index='0' declared_type='id' name='node' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='initFromXMLString:encoding:'>
<arg index='0' declared_type='NSString*' name='xmlString' type='@'/>
<arg index='1' declared_type='NSStringEncoding' name='encoding' type='I'/>
<retval declared_type='id' type='@'/>
</method>
<method selector='isValid'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='iterate:usingBlock:'>
<arg index='0' declared_type='NSString*' name='query' type='@'/>
<arg index='1' function_pointer='true' declared_type='void (^)(RXMLElement *)' name='blk' type='@?'>
<arg declared_type='RXMLElement*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='iterateElements:usingBlock:'>
<arg index='0' declared_type='NSArray*' name='elements' type='@'/>
<arg index='1' function_pointer='true' declared_type='void (^)(RXMLElement *)' name='blk' type='@?'>
<arg declared_type='RXMLElement*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='iterateWithRootXPath:usingBlock:'>
<arg index='0' declared_type='NSString*' name='xpath' type='@'/>
<arg index='1' function_pointer='true' declared_type='void (^)(RXMLElement *)' name='blk' type='@?'>
<arg declared_type='RXMLElement*' type='@'/>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='tag'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='text'>
<retval declared_type='NSString*' type='@'/>
</method>
<method selector='textAsDouble'>
<retval declared_type='double' type='d'/>
</method>
<method selector='textAsInt'>
<retval declared_type='NSInteger' type='i'/>
</method>
</class>
<class name='SVProgressHUD'>
<method class_method='true' selector='dismiss'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissWithError:'>
<arg index='0' declared_type='NSString*' name='errorString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissWithError:afterDelay:'>
<arg index='0' declared_type='NSString*' name='errorString' type='@'/>
<arg index='1' declared_type='NSTimeInterval' name='seconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissWithSuccess:'>
<arg index='0' declared_type='NSString*' name='successString' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='dismissWithSuccess:afterDelay:'>
<arg index='0' declared_type='NSString*' name='successString' type='@'/>
<arg index='1' declared_type='NSTimeInterval' name='seconds' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='isVisible'>
<retval declared_type='BOOL' type='B'/>
</method>
<method class_method='true' selector='setStatus:'>
<arg index='0' declared_type='NSString*' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='show'>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showErrorWithStatus:'>
<arg index='0' declared_type='NSString*' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showErrorWithStatus:duration:'>
<arg index='0' declared_type='NSString*' name='string' type='@'/>
<arg index='1' declared_type='NSTimeInterval' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showImage:status:'>
<arg index='0' declared_type='UIImage*' name='image' type='@'/>
<arg index='1' declared_type='NSString*' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showSuccessWithStatus:'>
<arg index='0' declared_type='NSString*' name='string' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showSuccessWithStatus:duration:'>
<arg index='0' declared_type='NSString*' name='string' type='@'/>
<arg index='1' declared_type='NSTimeInterval' name='duration' type='d'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithMaskType:'>
<arg index='0' declared_type='SVProgressHUDMaskType' name='maskType' type='I'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithStatus:'>
<arg index='0' declared_type='NSString*' name='status' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method class_method='true' selector='showWithStatus:maskType:'>
<arg index='0' declared_type='NSString*' name='status' type='@'/>
<arg index='1' declared_type='SVProgressHUDMaskType' name='maskType' type='I'/>
<retval declared_type='void' type='v'/>
</method>
</class>
<class name='UIImage'>
<method class_method='true' selector='imageWithUIView:'>
<arg index='0' declared_type='UIView*' name='view' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='UIViewController'>
<method selector='slidingViewController'>
<retval declared_type='ECSlidingViewController*' type='@'/>
</method>
</class>
<informal_protocol name='NSFNanoObjectProtocol'>
<method type='@20@0:4@8@12@16' selector='initNanoObjectFromDictionaryRepresentation:forKey:store:'>
<arg index='0' declared_type='NSDictionary*' name='theDictionary' type='@'/>
<arg index='1' declared_type='NSString*' name='aKey' type='@'/>
<arg index='2' declared_type='NSFNanoStore*' name='theStore' type='@'/>
<retval declared_type='id' type='@'/>
</method>
<method type='@8@0:4' selector='nanoObjectDictionaryRepresentation'>
<retval declared_type='NSDictionary*' type='@'/>
</method>
<method type='@8@0:4' selector='nanoObjectKey'>
<retval declared_type='NSString*' type='@'/>
</method>
<method type='@8@0:4' selector='rootObject'>
<retval declared_type='id' type='@'/>
</method>
</informal_protocol>
</signatures>
