<?xml version='1.0'?>
<signatures version='1.0'>
<constant declared_type='NSString*' const='true' name='ECSlidingViewTopDidAnchorLeft' type='@'/>
<constant declared_type='NSString*' const='true' name='ECSlidingViewTopDidAnchorRight' type='@'/>
<constant declared_type='NSString*' const='true' name='ECSlidingViewTopDidReset' type='@'/>
<constant declared_type='NSString*' const='true' name='ECSlidingViewUnderLeftWillAppear' type='@'/>
<constant declared_type='NSString*' const='true' name='ECSlidingViewUnderRightWillAppear' type='@'/>
<enum value='1' name='ECFixedRevealWidth'/>
<enum value='0' name='ECFullWidth'/>
<enum value='0' name='ECLeft'/>
<enum value='0' name='ECNone'/>
<enum value='2' name='ECPanning'/>
<enum value='1' name='ECRight'/>
<enum value='1' name='ECTapping'/>
<enum value='2' name='ECVariableRevealWidth'/>
<class name='ECSlidingViewController'>
<method selector='anchorLeftPeekAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorLeftRevealAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorRightPeekAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorRightRevealAmount'>
<retval declared_type='CGFloat' type='f'/>
</method>
<method selector='anchorTopViewOffScreenTo:'>
<arg declared_type='ECSide' name='side' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewOffScreenTo:animations:onComplete:'>
<arg declared_type='ECSide' name='side' index='0' type='i'/>
<arg declared_type='void (^)()' name='animations' index='1' type='@?' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' name='complete' index='2' type='@?' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewTo:'>
<arg declared_type='ECSide' name='side' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='anchorTopViewTo:animations:onComplete:'>
<arg declared_type='ECSide' name='side' index='0' type='i'/>
<arg declared_type='void (^)()' name='animations' index='1' type='@?' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' name='complete' index='2' type='@?' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='panGesture'>
<retval declared_type='UIPanGestureRecognizer*' type='@'/>
</method>
<method selector='resetStrategy'>
<retval declared_type='ECResetStrategy' type='i'/>
</method>
<method selector='resetTopView'>
<retval declared_type='void' type='v'/>
</method>
<method selector='resetTopViewWithAnimations:onComplete:'>
<arg declared_type='void (^)()' name='animations' index='0' type='@?' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<arg declared_type='void (^)()' name='complete' index='1' type='@?' function_pointer='true'>
<retval declared_type='void' type='v'/>
</arg>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorLeftPeekAmount:'>
<arg declared_type='CGFloat' name='anchorLeftPeekAmount' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorLeftRevealAmount:'>
<arg declared_type='CGFloat' name='anchorLeftRevealAmount' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorRightPeekAmount:'>
<arg declared_type='CGFloat' name='anchorRightPeekAmount' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setAnchorRightRevealAmount:'>
<arg declared_type='CGFloat' name='anchorRightRevealAmount' index='0' type='f'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setResetStrategy:'>
<arg declared_type='ECResetStrategy' name='resetStrategy' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setShouldAllowUserInteractionsWhenAnchored:'>
<arg declared_type='BOOL' name='shouldAllowUserInteractionsWhenAnchored' index='0' type='B'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setTopViewController:'>
<arg declared_type='UIViewController*' name='topViewController' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderLeftViewController:'>
<arg declared_type='UIViewController*' name='underLeftViewController' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderLeftWidthLayout:'>
<arg declared_type='ECViewWidthLayout' name='underLeftWidthLayout' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderRightViewController:'>
<arg declared_type='UIViewController*' name='underRightViewController' index='0' type='@'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='setUnderRightWidthLayout:'>
<arg declared_type='ECViewWidthLayout' name='underRightWidthLayout' index='0' type='i'/>
<retval declared_type='void' type='v'/>
</method>
<method selector='shouldAllowUserInteractionsWhenAnchored'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='topViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='topViewIsOffScreen'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underLeftShowing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underLeftViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='underLeftWidthLayout'>
<retval declared_type='ECViewWidthLayout' type='i'/>
</method>
<method selector='underRightShowing'>
<retval declared_type='BOOL' type='B'/>
</method>
<method selector='underRightViewController'>
<retval declared_type='UIViewController*' type='@'/>
</method>
<method selector='underRightWidthLayout'>
<retval declared_type='ECViewWidthLayout' type='i'/>
</method>
</class>
<class name='UIImage'>
<method selector='imageWithUIView:' class_method='true'>
<arg declared_type='UIView*' name='view' index='0' type='@'/>
<retval declared_type='UIImage*' type='@'/>
</method>
</class>
<class name='UIViewController'>
<method selector='slidingViewController'>
<retval declared_type='ECSlidingViewController*' type='@'/>
</method>
</class>
</signatures>
